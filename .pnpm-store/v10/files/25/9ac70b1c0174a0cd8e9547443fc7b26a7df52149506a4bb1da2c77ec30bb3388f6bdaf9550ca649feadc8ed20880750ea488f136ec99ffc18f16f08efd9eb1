{"version":3,"file":"index.js","names":["getTranslation","hoistQueryParamsToAnd","transformColumnsToPreferences","React","Fragment","useCallback","useEffect","useState","Pill","useEffectEvent","ChevronIcon","useAuth","useConfig","ListQueryProvider","useServerFunctions","TableColumnsProvider","useTranslation","AnimateHeight","ColumnSelector","useDocumentDrawer","RelationshipProvider","AddNewButton","DrawerLink","RelationshipTablePagination","baseClass","RelationshipTable","props","AfterInput","allowCreate","BeforeInput","disableTable","field","fieldPath","filterOptions","initialData","initialDataFromProps","initialDrawerData","Label","parent","relationTo","Table","setTable","config","getEntityConfig","permissions","docs","Array","isArray","reduce","acc","doc","id","i18n","t","query","setQuery","openColumnSelector","setOpenColumnSelector","collectionConfig","collectionSlug","isPolymorphic","selectedCollection","setSelectedCollection","undefined","isLoadingTable","setIsLoadingTable","data","setData","columnState","setColumnState","getTableState","renderTable","newQuery","limit","defaultLimit","admin","pagination","sort","defaultSort","where","defaultColumns","map","accessor","active","newData","state","newColumnState","NewTable","columns","enableRowSelections","orderableFieldName","orderable","collection","name","renderRowTypes","tableAppearance","handleTableRender","DocumentDrawer","closeDrawer","isDrawerOpen","openDrawer","onDrawerSave","args","foundDocIndex","findIndex","withNewOrUpdatedData","newDocs","onDrawerCreate","onDrawerDelete","filter","canCreate","collections","create","memoizedListQuery","useMemo","_jsxs","className","_jsx","buttonStyle","icon","label","onClick","direction","pillStyle","size","length","labels","plural","singular","modifySearchParams","onQueryChange","replaceAll","LinkedCellOverride","height","slug","onSave"],"sources":["../../../src/elements/RelationshipTable/index.tsx"],"sourcesContent":["'use client'\nimport { getTranslation } from '@payloadcms/translations'\nimport {\n  type CollectionSlug,\n  type Column,\n  type JoinFieldClient,\n  type ListQuery,\n  type PaginatedDocs,\n  type Where,\n} from 'payload'\nimport { hoistQueryParamsToAnd, transformColumnsToPreferences } from 'payload/shared'\nimport React, { Fragment, useCallback, useEffect, useState } from 'react'\n\nimport type { DocumentDrawerProps } from '../DocumentDrawer/types.js'\n\nimport { Pill } from '../../elements/Pill/index.js'\nimport { useEffectEvent } from '../../hooks/useEffectEvent.js'\nimport { ChevronIcon } from '../../icons/Chevron/index.js'\nimport { useAuth } from '../../providers/Auth/index.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { ListQueryProvider } from '../../providers/ListQuery/index.js'\nimport { useServerFunctions } from '../../providers/ServerFunctions/index.js'\nimport { TableColumnsProvider } from '../../providers/TableColumns/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { AnimateHeight } from '../AnimateHeight/index.js'\nimport { ColumnSelector } from '../ColumnSelector/index.js'\nimport { useDocumentDrawer } from '../DocumentDrawer/index.js'\nimport { RelationshipProvider } from '../Table/RelationshipProvider/index.js'\nimport { AddNewButton } from './AddNewButton.js'\nimport { DrawerLink } from './cells/DrawerLink/index.js'\nimport './index.scss'\nimport { RelationshipTablePagination } from './Pagination.js'\n\nconst baseClass = 'relationship-table'\n\ntype RelationshipTableComponentProps = {\n  readonly AfterInput?: React.ReactNode\n  readonly allowCreate?: boolean\n  readonly BeforeInput?: React.ReactNode\n  readonly disableTable?: boolean\n  readonly field: JoinFieldClient\n  readonly fieldPath?: string\n  readonly filterOptions?: Where\n  readonly initialData?: PaginatedDocs\n  readonly initialDrawerData?: DocumentDrawerProps['initialData']\n  readonly Label?: React.ReactNode\n  readonly parent?: {\n    collectionSlug: CollectionSlug\n    id: number | string\n    joinPath: string\n  }\n  readonly relationTo: string | string[]\n}\n\nexport const RelationshipTable: React.FC<RelationshipTableComponentProps> = (props) => {\n  const {\n    AfterInput,\n    allowCreate = true,\n    BeforeInput,\n    disableTable = false,\n    field,\n    fieldPath,\n    filterOptions,\n    initialData: initialDataFromProps,\n    initialDrawerData,\n    Label,\n    parent,\n    relationTo,\n  } = props\n  const [Table, setTable] = useState<React.ReactNode>(null)\n  const { config, getEntityConfig } = useConfig()\n\n  const { permissions } = useAuth()\n\n  const [initialData] = useState<PaginatedDocs>(() => {\n    if (initialDataFromProps) {\n      return {\n        ...initialDataFromProps,\n        docs: Array.isArray(initialDataFromProps.docs)\n          ? initialDataFromProps.docs.reduce((acc, doc) => {\n              if (typeof doc === 'string') {\n                return [\n                  ...acc,\n                  {\n                    id: doc,\n                  },\n                ]\n              }\n              return [...acc, doc]\n            }, [])\n          : [],\n      }\n    }\n  })\n\n  const { i18n, t } = useTranslation()\n\n  const [query, setQuery] = useState<ListQuery>()\n  const [openColumnSelector, setOpenColumnSelector] = useState(false)\n\n  const [collectionConfig] = useState(() => getEntityConfig({ collectionSlug: relationTo }))\n\n  const isPolymorphic = Array.isArray(relationTo)\n\n  const [selectedCollection, setSelectedCollection] = useState(\n    isPolymorphic ? undefined : relationTo,\n  )\n  const [isLoadingTable, setIsLoadingTable] = useState(!disableTable)\n  const [data, setData] = useState<PaginatedDocs>(initialData)\n  const [columnState, setColumnState] = useState<Column[]>()\n\n  const { getTableState } = useServerFunctions()\n\n  const renderTable = useCallback(\n    async (data?: PaginatedDocs) => {\n      const newQuery: ListQuery = {\n        limit: field?.defaultLimit || collectionConfig?.admin?.pagination?.defaultLimit,\n        sort: field.defaultSort || collectionConfig?.defaultSort,\n        ...(query || {}),\n        where: { ...(query?.where || {}) },\n      }\n\n      if (filterOptions) {\n        newQuery.where = hoistQueryParamsToAnd(newQuery.where, filterOptions)\n      }\n\n      // map columns from string[] to CollectionPreferences['columns']\n      const defaultColumns = field.admin.defaultColumns\n        ? field.admin.defaultColumns.map((accessor) => ({\n            accessor,\n            active: true,\n          }))\n        : undefined\n\n      const {\n        data: newData,\n        state: newColumnState,\n        Table: NewTable,\n      } = await getTableState({\n        collectionSlug: relationTo,\n        columns: transformColumnsToPreferences(query?.columns) || defaultColumns,\n        data,\n        enableRowSelections: false,\n        orderableFieldName:\n          !field.orderable || Array.isArray(field.collection)\n            ? undefined\n            : `_${field.collection}_${field.name}_order`,\n        parent,\n        query: newQuery,\n        renderRowTypes: true,\n        tableAppearance: 'condensed',\n      })\n\n      setData(newData)\n      setTable(NewTable)\n      setColumnState(newColumnState)\n      setIsLoadingTable(false)\n    },\n    [\n      field.defaultLimit,\n      field.defaultSort,\n      field.admin.defaultColumns,\n      field.collection,\n      field.name,\n      field.orderable,\n      collectionConfig?.admin?.pagination?.defaultLimit,\n      collectionConfig?.defaultSort,\n      query,\n      filterOptions,\n      getTableState,\n      relationTo,\n      parent,\n    ],\n  )\n\n  const handleTableRender = useEffectEvent((query: ListQuery, disableTable: boolean) => {\n    if (!disableTable && (!Table || query)) {\n      void renderTable()\n    }\n  })\n\n  useEffect(() => {\n    handleTableRender(query, disableTable)\n  }, [query, disableTable])\n\n  const [DocumentDrawer, , { closeDrawer, isDrawerOpen, openDrawer }] = useDocumentDrawer({\n    collectionSlug: selectedCollection,\n  })\n\n  const onDrawerSave = useCallback<DocumentDrawerProps['onSave']>(\n    (args) => {\n      const foundDocIndex = data?.docs?.findIndex((doc) => doc.id === args.doc.id)\n      const withNewOrUpdatedData: PaginatedDocs = { docs: [] } as PaginatedDocs\n\n      if (foundDocIndex !== -1) {\n        const newDocs = [...data.docs]\n        newDocs[foundDocIndex] = args.doc\n        withNewOrUpdatedData.docs = newDocs\n      } else {\n        withNewOrUpdatedData.docs = [args.doc, ...data.docs]\n      }\n\n      void renderTable(withNewOrUpdatedData)\n    },\n    [data?.docs, renderTable],\n  )\n\n  const onDrawerCreate = useCallback<DocumentDrawerProps['onSave']>(\n    (args) => {\n      closeDrawer()\n\n      void onDrawerSave(args)\n    },\n    [closeDrawer, onDrawerSave],\n  )\n\n  const onDrawerDelete = useCallback<DocumentDrawerProps['onDelete']>(\n    (args) => {\n      const newDocs = data.docs.filter((doc) => doc.id !== args.id)\n\n      void renderTable({\n        ...data,\n        docs: newDocs,\n      })\n    },\n    [data, renderTable],\n  )\n\n  const canCreate =\n    allowCreate !== false &&\n    permissions?.collections?.[isPolymorphic ? relationTo[0] : relationTo]?.create\n\n  useEffect(() => {\n    if (isPolymorphic && selectedCollection) {\n      openDrawer()\n    }\n  }, [selectedCollection, openDrawer, isPolymorphic])\n\n  useEffect(() => {\n    if (isPolymorphic && !isDrawerOpen && selectedCollection) {\n      setSelectedCollection(undefined)\n    }\n    // eslint-disable-next-line react-compiler/react-compiler -- TODO: fix\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDrawerOpen])\n\n  const memoizedListQuery = React.useMemo(\n    () => ({\n      columns: transformColumnsToPreferences(columnState)?.map(({ accessor }) => accessor),\n      limit: field.defaultLimit ?? collectionConfig?.admin?.pagination?.defaultLimit,\n      sort: field.defaultSort ?? collectionConfig?.defaultSort,\n    }),\n    [columnState, field, collectionConfig],\n  )\n\n  return (\n    <div className={baseClass}>\n      <div className={`${baseClass}__header`}>\n        {Label}\n        <div className={`${baseClass}__actions`}>\n          <AddNewButton\n            allowCreate={allowCreate !== false}\n            baseClass={baseClass}\n            buttonStyle=\"none\"\n            className={`${baseClass}__add-new${isPolymorphic ? '-polymorphic' : ' doc-drawer__toggler'}`}\n            collections={config.collections}\n            i18n={i18n}\n            icon={isPolymorphic ? 'plus' : undefined}\n            label={i18n.t('fields:addNew')}\n            onClick={isPolymorphic ? setSelectedCollection : openDrawer}\n            permissions={permissions}\n            relationTo={relationTo}\n          />\n          <Pill\n            aria-controls={`${baseClass}-columns`}\n            aria-expanded={openColumnSelector}\n            className={`${baseClass}__toggle-columns ${\n              openColumnSelector ? `${baseClass}__buttons-active` : ''\n            }`}\n            icon={<ChevronIcon direction={openColumnSelector ? 'up' : 'down'} />}\n            onClick={() => setOpenColumnSelector(!openColumnSelector)}\n            pillStyle=\"light\"\n            size=\"small\"\n          >\n            {t('general:columns')}\n          </Pill>\n        </div>\n      </div>\n      {BeforeInput}\n      {isLoadingTable ? (\n        <p>{t('general:loading')}</p>\n      ) : (\n        <Fragment>\n          {data?.docs && data.docs.length === 0 && (\n            <div className={`${baseClass}__no-results`}>\n              <p>\n                {i18n.t('general:noResults', {\n                  label: isPolymorphic\n                    ? i18n.t('general:documents')\n                    : getTranslation(collectionConfig?.labels?.plural, i18n),\n                })}\n              </p>\n              <AddNewButton\n                allowCreate={canCreate}\n                baseClass={baseClass}\n                collections={config.collections}\n                i18n={i18n}\n                label={i18n.t('general:createNewLabel', {\n                  label: isPolymorphic\n                    ? i18n.t('general:document')\n                    : getTranslation(collectionConfig?.labels?.singular, i18n),\n                })}\n                onClick={isPolymorphic ? setSelectedCollection : openDrawer}\n                permissions={permissions}\n                relationTo={relationTo}\n              />\n            </div>\n          )}\n          {data?.docs && data.docs.length > 0 && (\n            <RelationshipProvider>\n              <ListQueryProvider\n                data={data}\n                modifySearchParams={false}\n                onQueryChange={setQuery}\n                orderableFieldName={\n                  !field.orderable || Array.isArray(field.collection)\n                    ? undefined\n                    : `_${field.collection}_${fieldPath.replaceAll('.', '_')}_order`\n                }\n                query={memoizedListQuery}\n              >\n                <TableColumnsProvider\n                  collectionSlug={isPolymorphic ? relationTo[0] : relationTo}\n                  columnState={columnState}\n                  LinkedCellOverride={\n                    <DrawerLink onDrawerDelete={onDrawerDelete} onDrawerSave={onDrawerSave} />\n                  }\n                >\n                  <AnimateHeight\n                    className={`${baseClass}__columns`}\n                    height={openColumnSelector ? 'auto' : 0}\n                    id={`${baseClass}-columns`}\n                  >\n                    <div className={`${baseClass}__columns-inner`}>\n                      {collectionConfig && (\n                        <ColumnSelector collectionSlug={collectionConfig.slug} />\n                      )}\n                    </div>\n                  </AnimateHeight>\n                  {Table}\n                  <RelationshipTablePagination />\n                </TableColumnsProvider>\n              </ListQueryProvider>\n            </RelationshipProvider>\n          )}\n        </Fragment>\n      )}\n      {AfterInput}\n      <DocumentDrawer initialData={initialDrawerData} onSave={onDrawerCreate} />\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]}
{"version":3,"file":"index.js","names":["qs","React","createContext","use","useCallback","useEffect","useMemo","useRef","useState","useControllableState","useAuth","requests","formatDocTitle","useConfig","DocumentTitleProvider","useLocale","useLocaleLoading","usePreferences","useTranslation","UploadEditsProvider","useUploadEdits","useGetDocPermissions","Context","useDocumentInfo","DocumentInfo","children","props","id","collectionSlug","currentEditor","currentEditorFromProps","docPermissions","docPermissionsFromProps","globalSlug","hasPublishedDoc","hasPublishedDocFromProps","hasPublishPermission","hasPublishPermissionFromProps","hasSavePermission","hasSavePermissionFromProps","initialData","initialState","isLocked","isLockedFromProps","lastUpdateTime","lastUpdateTimeFromProps","mostRecentVersionIsAutosaved","mostRecentVersionIsAutosavedFromProps","unpublishedVersionCount","unpublishedVersionCountFromProps","versionCount","versionCountFromProps","setDocPermissions","setHasSavePermission","setHasPublishPermission","permissions","config","admin","dateFormat","routes","api","serverURL","getEntityConfig","collectionConfig","globalConfig","abortControllerRef","AbortController","docConfig","i18n","uploadEdits","title","setDocumentTitle","data","fallback","toString","setMostRecentVersionIsAutosaved","setVersionCount","setHasPublishedDoc","setUnpublishedVersionCount","documentIsLocked","setDocumentIsLocked","setCurrentEditor","setLastUpdateTime","savedDocumentData","setSavedDocumentData","uploadStatus","setUploadStatus","documentLockState","hasShownLockedModal","user","updateUploadStatus","status","getPreference","setPreference","code","locale","localeIsLoading","isInitializing","undefined","baseURL","slug","pluralType","preferencesKey","unlockDocument","docID","isGlobal","query","request","get","credentials","docs","json","length","lockID","delete","headers","error","console","updateDocumentEditor","userData","relationTo","collection","value","patch","body","JSON","stringify","getDocPermissions","getDocPreferences","setDocFieldPreferences","path","fieldPreferences","allPreferences","fields","e","incrementVersionCount","newCount","versions","maxPerDoc","Math","min","max","updateSavedDocumentData","re1","current","abort","_err","action","docURL","params","depth","addQueryPrefix","_jsx","DocumentInfoProvider"],"sources":["../../../src/providers/DocumentInfo/index.tsx"],"sourcesContent":["'use client'\nimport type { ClientUser, DocumentPreferences } from 'payload'\n\nimport * as qs from 'qs-esm'\nimport React, { createContext, use, useCallback, useEffect, useMemo, useRef, useState } from 'react'\n\nimport { useControllableState } from '../../hooks/useControllableState.js'\nimport { useAuth } from '../../providers/Auth/index.js'\nimport { requests } from '../../utilities/api.js'\nimport { formatDocTitle } from '../../utilities/formatDocTitle/index.js'\nimport { useConfig } from '../Config/index.js'\nimport { DocumentTitleProvider } from '../DocumentTitle/index.js'\nimport { useLocale, useLocaleLoading } from '../Locale/index.js'\nimport { usePreferences } from '../Preferences/index.js'\nimport { useTranslation } from '../Translation/index.js'\nimport { UploadEditsProvider, useUploadEdits } from '../UploadEdits/index.js'\nimport { type DocumentInfoContext, type DocumentInfoProps } from './types.js'\nimport { useGetDocPermissions } from './useGetDocPermissions.js'\n\nconst Context = createContext({} as DocumentInfoContext)\n\nexport type * from './types.js'\n\nexport const useDocumentInfo = (): DocumentInfoContext => use(Context)\n\nconst DocumentInfo: React.FC<\n  {\n    readonly children: React.ReactNode\n  } & DocumentInfoProps\n> = ({ children, ...props }) => {\n  const {\n    id,\n    collectionSlug,\n    currentEditor: currentEditorFromProps,\n    docPermissions: docPermissionsFromProps,\n    globalSlug,\n    hasPublishedDoc: hasPublishedDocFromProps,\n    hasPublishPermission: hasPublishPermissionFromProps,\n    hasSavePermission: hasSavePermissionFromProps,\n    initialData,\n    initialState,\n    isLocked: isLockedFromProps,\n    lastUpdateTime: lastUpdateTimeFromProps,\n    mostRecentVersionIsAutosaved: mostRecentVersionIsAutosavedFromProps,\n    unpublishedVersionCount: unpublishedVersionCountFromProps,\n    versionCount: versionCountFromProps,\n  } = props\n\n  const [docPermissions, setDocPermissions] = useControllableState(docPermissionsFromProps)\n\n  const [hasSavePermission, setHasSavePermission] = useControllableState(hasSavePermissionFromProps)\n\n  const [hasPublishPermission, setHasPublishPermission] = useControllableState(\n    hasPublishPermissionFromProps,\n  )\n\n  const { permissions } = useAuth()\n\n  const {\n    config: {\n      admin: { dateFormat },\n      routes: { api },\n      serverURL,\n    },\n    getEntityConfig,\n  } = useConfig()\n\n  const collectionConfig = getEntityConfig({ collectionSlug })\n  const globalConfig = getEntityConfig({ globalSlug })\n\n  const abortControllerRef = useRef(new AbortController())\n  const docConfig = collectionConfig || globalConfig\n\n  const { i18n } = useTranslation()\n\n  const { uploadEdits } = useUploadEdits()\n\n  /**\n   * @deprecated This state will be removed in v4.\n   * This is for performance reasons. Use the `DocumentTitleContext` instead.\n   */\n  const [title, setDocumentTitle] = useState(() =>\n    formatDocTitle({\n      collectionConfig,\n      data: { ...(initialData || {}), id },\n      dateFormat,\n      fallback: id?.toString(),\n      globalConfig,\n      i18n,\n    }),\n  )\n\n  const [mostRecentVersionIsAutosaved, setMostRecentVersionIsAutosaved] = useState(\n    mostRecentVersionIsAutosavedFromProps,\n  )\n\n  const [versionCount, setVersionCount] = useState(versionCountFromProps)\n\n  const [hasPublishedDoc, setHasPublishedDoc] = useState(hasPublishedDocFromProps)\n  const [unpublishedVersionCount, setUnpublishedVersionCount] = useState(\n    unpublishedVersionCountFromProps,\n  )\n\n  const [documentIsLocked, setDocumentIsLocked] = useControllableState<boolean | undefined>(\n    isLockedFromProps,\n  )\n  const [currentEditor, setCurrentEditor] = useControllableState<ClientUser | null>(\n    currentEditorFromProps,\n  )\n  const [lastUpdateTime, setLastUpdateTime] = useControllableState<number>(lastUpdateTimeFromProps)\n  const [savedDocumentData, setSavedDocumentData] = useControllableState(initialData)\n  const [uploadStatus, setUploadStatus] = useControllableState<'failed' | 'idle' | 'uploading'>(\n    'idle',\n  )\n\n  const documentLockState = useRef<{\n    hasShownLockedModal: boolean\n    isLocked: boolean\n    user: ClientUser | number | string\n  } | null>({\n    hasShownLockedModal: false,\n    isLocked: false,\n    user: null,\n  })\n\n  const updateUploadStatus = useCallback(\n    (status: 'failed' | 'idle' | 'uploading') => {\n      setUploadStatus(status)\n    },\n    [setUploadStatus],\n  )\n\n  const { getPreference, setPreference } = usePreferences()\n  const { code: locale } = useLocale()\n  const { localeIsLoading } = useLocaleLoading()\n\n  const isInitializing = useMemo(\n    () => initialState === undefined || initialData === undefined || localeIsLoading,\n    [initialData, initialState, localeIsLoading],\n  )\n\n  const baseURL = `${serverURL}${api}`\n  let slug: string\n  let pluralType: 'collections' | 'globals'\n  let preferencesKey: string\n\n  if (globalSlug) {\n    slug = globalSlug\n    pluralType = 'globals'\n    preferencesKey = `global-${slug}`\n  }\n\n  if (collectionSlug) {\n    slug = collectionSlug\n    pluralType = 'collections'\n\n    if (id) {\n      preferencesKey = `collection-${slug}-${id}`\n    }\n  }\n\n  const unlockDocument = useCallback(\n    async (docID: number | string, slug: string) => {\n      try {\n        const isGlobal = slug === globalSlug\n\n        const query = isGlobal\n          ? `where[globalSlug][equals]=${slug}`\n          : `where[document.value][equals]=${docID}&where[document.relationTo][equals]=${slug}`\n\n        const request = await requests.get(`${serverURL}${api}/payload-locked-documents?${query}`, {\n          credentials: 'include',\n        })\n\n        const { docs } = await request.json()\n\n        if (docs?.length > 0) {\n          const lockID = docs[0].id\n          await requests.delete(`${serverURL}${api}/payload-locked-documents/${lockID}`, {\n            credentials: 'include',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          })\n          setDocumentIsLocked(false)\n        }\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error('Failed to unlock the document', error)\n      }\n    },\n    [serverURL, api, globalSlug, setDocumentIsLocked],\n  )\n\n  const updateDocumentEditor = useCallback(\n    async (docID: number | string, slug: string, user: ClientUser | number | string) => {\n      try {\n        const isGlobal = slug === globalSlug\n\n        const query = isGlobal\n          ? `where[globalSlug][equals]=${slug}`\n          : `where[document.value][equals]=${docID}&where[document.relationTo][equals]=${slug}`\n\n        // Check if the document is already locked\n        const request = await requests.get(`${serverURL}${api}/payload-locked-documents?${query}`, {\n          credentials: 'include',\n        })\n\n        const { docs } = await request.json()\n\n        if (docs?.length > 0) {\n          const lockID = docs[0].id\n\n          const userData =\n            typeof user === 'object'\n              ? { relationTo: user.collection, value: user.id }\n              : { relationTo: 'users', value: user }\n\n          // Send a patch request to update the _lastEdited info\n          await requests.patch(`${serverURL}${api}/payload-locked-documents/${lockID}`, {\n            body: JSON.stringify({\n              user: userData,\n            }),\n            credentials: 'include',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          })\n        }\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error('Failed to update the document editor', error)\n      }\n    },\n    [serverURL, api, globalSlug],\n  )\n\n  const getDocPermissions = useGetDocPermissions({\n    id: id as string,\n    api,\n    collectionSlug,\n    globalSlug,\n    i18n,\n    locale,\n    permissions,\n    serverURL,\n    setDocPermissions,\n    setHasPublishPermission,\n    setHasSavePermission,\n  })\n\n  const getDocPreferences = useCallback(() => {\n    return getPreference<DocumentPreferences>(preferencesKey)\n  }, [getPreference, preferencesKey])\n\n  const setDocFieldPreferences = useCallback<DocumentInfoContext['setDocFieldPreferences']>(\n    async (path, fieldPreferences) => {\n      const allPreferences = await getDocPreferences()\n\n      if (preferencesKey) {\n        try {\n          await setPreference(preferencesKey, {\n            ...allPreferences,\n            fields: {\n              ...(allPreferences?.fields || {}),\n              [path]: {\n                ...allPreferences?.fields?.[path],\n                ...fieldPreferences,\n              },\n            },\n          })\n        } catch (e) {\n          console.error(e) // eslint-disable-line no-console\n        }\n      }\n    },\n    [setPreference, preferencesKey, getDocPreferences],\n  )\n\n  const incrementVersionCount = useCallback(() => {\n    const newCount = versionCount + 1\n    if (collectionConfig && collectionConfig.versions) {\n      if (collectionConfig.versions.maxPerDoc > 0) {\n        setVersionCount(Math.min(newCount, collectionConfig.versions.maxPerDoc))\n      } else {\n        setVersionCount(newCount)\n      }\n    } else if (globalConfig && globalConfig.versions) {\n      if (globalConfig.versions.max > 0) {\n        setVersionCount(Math.min(newCount, globalConfig.versions.max))\n      } else {\n        setVersionCount(newCount)\n      }\n    }\n  }, [collectionConfig, globalConfig, versionCount])\n\n  const updateSavedDocumentData = React.useCallback<DocumentInfoContext['updateSavedDocumentData']>(\n    (json) => {\n      setSavedDocumentData(json)\n    },\n    [setSavedDocumentData],\n  )\n\n  /**\n   * @todo: Remove this in v4\n   * Users should use the `DocumentTitleContext` instead.\n   */\n  useEffect(() => {\n    setDocumentTitle(\n      formatDocTitle({\n        collectionConfig,\n        data: { ...savedDocumentData, id },\n        dateFormat,\n        fallback: id?.toString(),\n        globalConfig,\n        i18n,\n      }),\n    )\n  }, [collectionConfig, globalConfig, savedDocumentData, dateFormat, i18n, id])\n\n  // clean on unmount\n  useEffect(() => {\n    const re1 = abortControllerRef.current\n\n    return () => {\n      if (re1) {\n        try {\n          re1.abort()\n        } catch (_err) {\n          // swallow error\n        }\n      }\n    }\n  }, [])\n\n  const action: string = React.useMemo(() => {\n    const docURL = `${baseURL}${pluralType === 'globals' ? `/globals` : ''}/${slug}${id ? `/${id}` : ''}`\n    const params = {\n      depth: 0,\n      'fallback-locale': 'null',\n      locale,\n      uploadEdits: uploadEdits || undefined,\n    }\n\n    return `${docURL}${qs.stringify(params, {\n      addQueryPrefix: true,\n    })}`\n  }, [baseURL, locale, pluralType, id, slug, uploadEdits])\n\n  const value: DocumentInfoContext = {\n    ...props,\n    action,\n    currentEditor,\n    docConfig,\n    docPermissions,\n    documentIsLocked,\n    documentLockState,\n    getDocPermissions,\n    getDocPreferences,\n    hasPublishedDoc,\n    hasPublishPermission,\n    hasSavePermission,\n    incrementVersionCount,\n    initialData,\n    initialState,\n    isInitializing,\n    lastUpdateTime,\n    mostRecentVersionIsAutosaved,\n    preferencesKey,\n    savedDocumentData,\n    setCurrentEditor,\n    setDocFieldPreferences,\n    setDocumentIsLocked,\n    setDocumentTitle,\n    setHasPublishedDoc,\n    setLastUpdateTime,\n    setMostRecentVersionIsAutosaved,\n    setUnpublishedVersionCount,\n    setUploadStatus: updateUploadStatus,\n    title,\n    unlockDocument,\n    unpublishedVersionCount,\n    updateDocumentEditor,\n    updateSavedDocumentData,\n    uploadStatus,\n    versionCount,\n  }\n\n  return (\n    <Context value={value}>\n      <DocumentTitleProvider>{children}</DocumentTitleProvider>\n    </Context>\n  )\n}\n\nexport const DocumentInfoProvider: React.FC<\n  {\n    readonly children: React.ReactNode\n  } & DocumentInfoProps\n> = (props) => {\n  return (\n    <UploadEditsProvider>\n      <DocumentInfo {...props} />\n    </UploadEditsProvider>\n  )\n}\n"],"mappings":"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","ignoreList":[]}
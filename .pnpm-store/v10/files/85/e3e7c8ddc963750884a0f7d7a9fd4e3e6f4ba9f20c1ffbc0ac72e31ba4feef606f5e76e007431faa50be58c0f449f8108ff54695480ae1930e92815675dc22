{"version":3,"file":"renderTable.js","names":["getTranslation","fieldAffectsData","fieldIsHiddenOrDisabled","flattenTopLevelFields","React","RenderServerComponent","GroupByHeader","GroupByPageControls","OrderableTable","Pill","SelectAll","SelectionProvider","SelectRow","SortHeader","SortRow","Table","filterFields","buildColumnState","getInitialColumns","renderFilters","fields","importMap","reduce","acc","field","admin","components","Filter","set","name","Component","Map","renderTable","clientCollectionConfig","clientConfig","collectionConfig","collections","columns","columnsFromArgs","customCellProps","data","enableRowSelections","groupByFieldPath","groupByValue","heading","i18n","key","orderableFieldName","payload","query","renderRowTypes","tableAppearance","useAsTitle","viewType","columnState","clientFields","serverFields","isPolymorphic","isGroupingBy","Boolean","groupBy","collection","find","each","slug","some","push","serverCollectionConfig","config","filter","column","keepPresentationalFields","moveSubFieldsToTop","accessor","undefined","defaultColumns","sharedArgs","collectionSlug","dataType","docs","columnsToUse","unshift","active","disabled","hidden","Heading","t","renderedCells","map","doc","i","_jsx","size","relationTo","labels","singular","_","rowData","className","join","_jsxs","totalDocs","appearance"],"sources":["../../src/utilities/renderTable.tsx"],"sourcesContent":["import type {\n  ClientCollectionConfig,\n  ClientConfig,\n  ClientField,\n  CollectionConfig,\n  CollectionPreferences,\n  Column,\n  ColumnPreference,\n  Field,\n  ImportMap,\n  ListQuery,\n  PaginatedDocs,\n  Payload,\n  SanitizedCollectionConfig,\n  ViewTypes,\n} from 'payload'\n\nimport { getTranslation, type I18nClient } from '@payloadcms/translations'\nimport { fieldAffectsData, fieldIsHiddenOrDisabled, flattenTopLevelFields } from 'payload/shared'\nimport React from 'react'\n\nimport type { BuildColumnStateArgs } from '../providers/TableColumns/buildColumnState/index.js'\n\nimport { RenderServerComponent } from '../elements/RenderServerComponent/index.js'\nimport {\n  GroupByHeader,\n  GroupByPageControls,\n  OrderableTable,\n  Pill,\n  SelectAll,\n  SelectionProvider,\n  SelectRow,\n  SortHeader,\n  SortRow,\n  Table,\n  // eslint-disable-next-line payload/no-imports-from-exports-dir -- these MUST reference the exports dir: https://github.com/payloadcms/payload/issues/12002#issuecomment-2791493587\n} from '../exports/client/index.js'\nimport { filterFields } from '../providers/TableColumns/buildColumnState/filterFields.js'\nimport { buildColumnState } from '../providers/TableColumns/buildColumnState/index.js'\nimport { getInitialColumns } from '../providers/TableColumns/getInitialColumns.js'\n\nexport const renderFilters = (\n  fields: Field[],\n  importMap: ImportMap,\n): Map<string, React.ReactNode> =>\n  fields.reduce(\n    (acc, field) => {\n      if (fieldIsHiddenOrDisabled(field)) {\n        return acc\n      }\n\n      if ('name' in field && field.admin?.components?.Filter) {\n        acc.set(\n          field.name,\n          RenderServerComponent({\n            Component: field.admin.components?.Filter,\n            importMap,\n          }),\n        )\n      }\n\n      return acc\n    },\n    new Map() as Map<string, React.ReactNode>,\n  )\n\nexport const renderTable = ({\n  clientCollectionConfig,\n  clientConfig,\n  collectionConfig,\n  collections,\n  columns: columnsFromArgs,\n  customCellProps,\n  data,\n  enableRowSelections,\n  groupByFieldPath,\n  groupByValue,\n  heading,\n  i18n,\n  key = 'table',\n  orderableFieldName,\n  payload,\n  query,\n  renderRowTypes,\n  tableAppearance,\n  useAsTitle,\n  viewType,\n}: {\n  clientCollectionConfig?: ClientCollectionConfig\n  clientConfig?: ClientConfig\n  collectionConfig?: SanitizedCollectionConfig\n  collections?: string[]\n  columns?: CollectionPreferences['columns']\n  customCellProps?: Record<string, unknown>\n  data: PaginatedDocs\n  drawerSlug?: string\n  enableRowSelections: boolean\n  groupByFieldPath?: string\n  groupByValue?: string\n  heading?: string\n  i18n: I18nClient\n  key?: string\n  orderableFieldName: string\n  payload: Payload\n  query?: ListQuery\n  renderRowTypes?: boolean\n  tableAppearance?: 'condensed' | 'default'\n  useAsTitle: CollectionConfig['admin']['useAsTitle']\n  viewType?: ViewTypes\n}): {\n  columnState: Column[]\n  Table: React.ReactNode\n} => {\n  // Ensure that columns passed as args comply with the field config, i.e. `hidden`, `disableListColumn`, etc.\n\n  let columnState: Column[]\n  let clientFields: ClientField[] = clientCollectionConfig?.fields || []\n  let serverFields: Field[] = collectionConfig?.fields || []\n  const isPolymorphic = collections\n\n  const isGroupingBy = Boolean(collectionConfig?.admin?.groupBy && query?.groupBy)\n\n  if (isPolymorphic) {\n    clientFields = []\n    serverFields = []\n    for (const collection of collections) {\n      const clientCollectionConfig = clientConfig.collections.find(\n        (each) => each.slug === collection,\n      )\n      for (const field of filterFields(clientCollectionConfig.fields)) {\n        if (fieldAffectsData(field)) {\n          if (clientFields.some((each) => fieldAffectsData(each) && each.name === field.name)) {\n            continue\n          }\n        }\n\n        clientFields.push(field)\n      }\n\n      const serverCollectionConfig = payload.collections[collection].config\n      for (const field of filterFields(serverCollectionConfig.fields)) {\n        if (fieldAffectsData(field)) {\n          if (serverFields.some((each) => fieldAffectsData(each) && each.name === field.name)) {\n            continue\n          }\n        }\n\n        serverFields.push(field)\n      }\n    }\n  }\n\n  const columns: ColumnPreference[] = columnsFromArgs\n    ? columnsFromArgs?.filter((column) =>\n        flattenTopLevelFields(clientFields, {\n          i18n,\n          keepPresentationalFields: true,\n          moveSubFieldsToTop: true,\n        })?.some((field) => {\n          const accessor =\n            'accessor' in field ? field.accessor : 'name' in field ? field.name : undefined\n          return accessor === column.accessor\n        }),\n      )\n    : getInitialColumns(\n        isPolymorphic ? clientFields : filterFields(clientFields),\n        useAsTitle,\n        isPolymorphic ? [] : clientCollectionConfig?.admin?.defaultColumns,\n      )\n\n  const sharedArgs: Pick<\n    BuildColumnStateArgs,\n    | 'clientFields'\n    | 'columns'\n    | 'customCellProps'\n    | 'enableRowSelections'\n    | 'i18n'\n    | 'payload'\n    | 'serverFields'\n    | 'useAsTitle'\n    | 'viewType'\n  > = {\n    clientFields,\n    columns,\n    enableRowSelections,\n    i18n,\n    // sortColumnProps,\n    customCellProps,\n    payload,\n    serverFields,\n    useAsTitle,\n    viewType,\n  }\n\n  if (isPolymorphic) {\n    columnState = buildColumnState({\n      ...sharedArgs,\n      collectionSlug: undefined,\n      dataType: 'polymorphic',\n      docs: data.docs,\n    })\n  } else {\n    columnState = buildColumnState({\n      ...sharedArgs,\n      collectionSlug: clientCollectionConfig.slug,\n      dataType: 'monomorphic',\n      docs: data.docs,\n    })\n  }\n\n  const columnsToUse = [...columnState]\n\n  if (renderRowTypes) {\n    columnsToUse.unshift({\n      accessor: 'collection',\n      active: true,\n      field: {\n        admin: {\n          disabled: true,\n        },\n        hidden: true,\n      },\n      Heading: i18n.t('version:type'),\n      renderedCells: data.docs.map((doc, i) => (\n        <Pill key={i} size=\"small\">\n          {getTranslation(\n            collections\n              ? payload.collections[doc.relationTo].config.labels.singular\n              : clientCollectionConfig.labels.singular,\n            i18n,\n          )}\n        </Pill>\n      )),\n    } as Column)\n  }\n\n  if (enableRowSelections) {\n    columnsToUse.unshift({\n      accessor: '_select',\n      active: true,\n      field: {\n        admin: {\n          disabled: true,\n        },\n        hidden: true,\n      },\n      Heading: <SelectAll />,\n      renderedCells: data.docs.map((_, i) => <SelectRow key={i} rowData={data.docs[i]} />),\n    } as Column)\n  }\n\n  if (isGroupingBy) {\n    return {\n      columnState,\n      // key is required since Next.js 15.2.0 to prevent React key error\n      Table: (\n        <div\n          className={['table-wrap', groupByValue !== undefined && `table-wrap--group-by`]\n            .filter(Boolean)\n            .join(' ')}\n          key={key}\n        >\n          <SelectionProvider docs={data.docs} totalDocs={data.totalDocs}>\n            <GroupByHeader\n              collectionConfig={clientCollectionConfig}\n              groupByFieldPath={groupByFieldPath}\n              groupByValue={groupByValue}\n              heading={heading}\n            />\n            <Table appearance={tableAppearance} columns={columnsToUse} data={data.docs} />\n            <GroupByPageControls\n              collectionConfig={clientCollectionConfig}\n              data={data}\n              groupByValue={groupByValue}\n            />\n          </SelectionProvider>\n        </div>\n      ),\n    }\n  }\n\n  if (!orderableFieldName) {\n    return {\n      columnState,\n      // key is required since Next.js 15.2.0 to prevent React key error\n      Table: (\n        <div className=\"table-wrap\" key={key}>\n          <Table appearance={tableAppearance} columns={columnsToUse} data={data.docs} />\n        </div>\n      ),\n    }\n  }\n\n  columnsToUse.unshift({\n    accessor: '_dragHandle',\n    active: true,\n    field: {\n      admin: {\n        disabled: true,\n      },\n      hidden: true,\n    },\n    Heading: <SortHeader />,\n    renderedCells: data.docs.map((_, i) => <SortRow key={i} />),\n  } as Column)\n\n  return {\n    columnState,\n    // key is required since Next.js 15.2.0 to prevent React key error\n    Table: (\n      <div className=\"table-wrap\" key={key}>\n        <OrderableTable\n          appearance={tableAppearance}\n          collection={clientCollectionConfig}\n          columns={columnsToUse}\n          data={data.docs}\n        />\n      </div>\n    ),\n  }\n}\n"],"mappings":"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","ignoreList":[]}
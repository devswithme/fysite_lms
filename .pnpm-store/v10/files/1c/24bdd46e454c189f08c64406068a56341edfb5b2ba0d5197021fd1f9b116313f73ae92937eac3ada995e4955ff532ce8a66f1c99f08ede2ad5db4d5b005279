{"version":3,"sources":["../src/plugin.spec.ts"],"sourcesContent":["import type { Transporter } from 'nodemailer'\n\nimport { jest } from '@jest/globals'\nimport nodemailer from 'nodemailer'\n\nimport type { NodemailerAdapterArgs } from './index.js'\n\nimport { nodemailerAdapter } from './index.js'\n\nconst defaultArgs: NodemailerAdapterArgs = {\n  defaultFromAddress: 'test@test.com',\n  defaultFromName: 'Test',\n}\n\ndescribe('email-nodemailer', () => {\n  describe('transport verification', () => {\n    let mockedVerify: jest.Mock<Transporter['verify']>\n    let mockTransport: Transporter\n\n    beforeEach(() => {\n      mockedVerify = jest.fn<Transporter['verify']>()\n      mockTransport = nodemailer.createTransport({\n        name: 'existing-transport',\n        // eslint-disable-next-line @typescript-eslint/require-await, @typescript-eslint/no-misused-promises\n        send: async (mail) => {\n          // eslint-disable-next-line no-console\n          console.log('mock send', mail)\n        },\n        verify: mockedVerify,\n        version: '0.0.1',\n      })\n    })\n\n    it('should be invoked when skipVerify = false', async () => {\n      await nodemailerAdapter({\n        ...defaultArgs,\n        skipVerify: false,\n        transport: mockTransport,\n      })\n\n      expect(mockedVerify.mock.calls).toHaveLength(1)\n    })\n\n    it('should be invoked when skipVerify is undefined', async () => {\n      await nodemailerAdapter({\n        ...defaultArgs,\n        skipVerify: false,\n        transport: mockTransport,\n      })\n\n      expect(mockedVerify.mock.calls).toHaveLength(1)\n    })\n\n    it('should not be invoked when skipVerify = true', async () => {\n      await nodemailerAdapter({\n        ...defaultArgs,\n        skipVerify: true,\n        transport: mockTransport,\n      })\n\n      expect(mockedVerify.mock.calls).toHaveLength(0)\n    })\n  })\n})\n"],"names":["jest","nodemailer","nodemailerAdapter","defaultArgs","defaultFromAddress","defaultFromName","describe","mockedVerify","mockTransport","beforeEach","fn","createTransport","name","send","mail","console","log","verify","version","it","skipVerify","transport","expect","mock","calls","toHaveLength"],"mappings":"AAEA,SAASA,IAAI,QAAQ,gBAAe;AACpC,OAAOC,gBAAgB,aAAY;AAInC,SAASC,iBAAiB,QAAQ,aAAY;AAE9C,MAAMC,cAAqC;IACzCC,oBAAoB;IACpBC,iBAAiB;AACnB;AAEAC,SAAS,oBAAoB;IAC3BA,SAAS,0BAA0B;QACjC,IAAIC;QACJ,IAAIC;QAEJC,WAAW;YACTF,eAAeP,KAAKU,EAAE;YACtBF,gBAAgBP,WAAWU,eAAe,CAAC;gBACzCC,MAAM;gBACN,oGAAoG;gBACpGC,MAAM,OAAOC;oBACX,sCAAsC;oBACtCC,QAAQC,GAAG,CAAC,aAAaF;gBAC3B;gBACAG,QAAQV;gBACRW,SAAS;YACX;QACF;QAEAC,GAAG,6CAA6C;YAC9C,MAAMjB,kBAAkB;gBACtB,GAAGC,WAAW;gBACdiB,YAAY;gBACZC,WAAWb;YACb;YAEAc,OAAOf,aAAagB,IAAI,CAACC,KAAK,EAAEC,YAAY,CAAC;QAC/C;QAEAN,GAAG,kDAAkD;YACnD,MAAMjB,kBAAkB;gBACtB,GAAGC,WAAW;gBACdiB,YAAY;gBACZC,WAAWb;YACb;YAEAc,OAAOf,aAAagB,IAAI,CAACC,KAAK,EAAEC,YAAY,CAAC;QAC/C;QAEAN,GAAG,gDAAgD;YACjD,MAAMjB,kBAAkB;gBACtB,GAAGC,WAAW;gBACdiB,YAAY;gBACZC,WAAWb;YACb;YAEAc,OAAOf,aAAagB,IAAI,CAACC,KAAK,EAAEC,YAAY,CAAC;QAC/C;IACF;AACF"}
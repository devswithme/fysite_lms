{"version":3,"file":"index.js","names":["c","_c","useModal","getTranslation","useRouter","useSearchParams","mergeListSearchAndWhere","qs","React","toast","CheckboxInput","useAuth","useConfig","useLocale","useRouteCache","SelectAllStatus","useSelection","useTranslation","requests","parseSearchParams","ConfirmationModal","ListSelectionButton","Translation","DeleteMany","props","$","viewType","collection","t0","modalPrefix","t1","undefined","slug","trash","permissions","count","selectAll","selectedIDs","toggleAll","router","searchParams","clearRouteCache","collectionPermissions","collections","hasDeletePermission","delete","selectingAll","AllAvailable","t2","ids","None","t3","baseWhere","where","finalWhere","and","Array","isArray","deletedAt","exists","t4","replace","stringify","page","addQueryPrefix","_jsx","Fragment","children","DeleteMany_v4","afterDelete","search","selections","all","totalCount","length","t","config","routes","api","serverURL","code","locale","i18n","openModal","deletePermanently","setDeletePermanently","useState","confirmManyDeleteDrawerSlug","handleDelete","useCallback","deletingOneCollection","Object","keys","result","relationTo","entries","collectionConfig","find","whereConstraint","id","not_equals","in","url","limit","deleteManyResponse","headers","language","patch","body","JSON","Date","toISOString","plural","singular","labels","json","deletedDocs","docs","successLabel","status","wasTrashed","successKey","success","label","errors","error","message","description","map","join","deletedCount","doc","totalDocs","_err","labelString","labelCount","reduce","acc","key","value","index","array","collectionLabel","newLabel","_jsxs","className","onClick","elements","0","1","i18nKey","variables","checked","name","onToggle","e","target","confirmingLabel","heading","modalSlug","onConfirm"],"sources":["../../../src/elements/DeleteMany/index.tsx"],"sourcesContent":["'use client'\nimport type { ClientCollectionConfig, ViewTypes, Where } from 'payload'\n\nimport { useModal } from '@faceless-ui/modal'\nimport { getTranslation } from '@payloadcms/translations'\nimport { useRouter, useSearchParams } from 'next/navigation.js'\nimport { mergeListSearchAndWhere } from 'payload/shared'\nimport * as qs from 'qs-esm'\nimport React from 'react'\nimport { toast } from 'sonner'\n\nimport { CheckboxInput } from '../../fields/Checkbox/Input.js'\nimport { useAuth } from '../../providers/Auth/index.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { useLocale } from '../../providers/Locale/index.js'\nimport { useRouteCache } from '../../providers/RouteCache/index.js'\nimport { SelectAllStatus, useSelection } from '../../providers/Selection/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { requests } from '../../utilities/api.js'\nimport { parseSearchParams } from '../../utilities/parseSearchParams.js'\nimport { ConfirmationModal } from '../ConfirmationModal/index.js'\nimport { ListSelectionButton } from '../ListSelection/index.js'\nimport { Translation } from '../Translation/index.js'\nimport './index.scss'\n\nexport type Props = {\n  collection: ClientCollectionConfig\n  /**\n   * When multiple DeleteMany components are rendered on the page, this will differentiate them.\n   */\n  modalPrefix?: string\n  /**\n   * When multiple PublishMany components are rendered on the page, this will differentiate them.\n   */\n  title?: string\n  viewType?: ViewTypes\n}\n\nexport const DeleteMany: React.FC<Props> = (props) => {\n  const { viewType } = props\n  const { collection: { slug, trash } = {}, modalPrefix } = props\n\n  const { permissions } = useAuth()\n  const { count, selectAll, selectedIDs, toggleAll } = useSelection()\n  const router = useRouter()\n  const searchParams = useSearchParams()\n  const { clearRouteCache } = useRouteCache()\n\n  const collectionPermissions = permissions?.collections?.[slug]\n  const hasDeletePermission = collectionPermissions?.delete\n\n  const selectingAll = selectAll === SelectAllStatus.AllAvailable\n\n  const ids = selectingAll ? [] : selectedIDs\n\n  if (selectAll === SelectAllStatus.None || !hasDeletePermission) {\n    return null\n  }\n\n  const baseWhere = parseSearchParams(searchParams)?.where as Where\n\n  const finalWhere =\n    viewType === 'trash'\n      ? {\n          and: [\n            ...(Array.isArray(baseWhere?.and) ? baseWhere.and : baseWhere ? [baseWhere] : []),\n            { deletedAt: { exists: true } },\n          ],\n        }\n      : baseWhere\n\n  return (\n    <React.Fragment>\n      <DeleteMany_v4\n        afterDelete={() => {\n          toggleAll()\n\n          router.replace(\n            qs.stringify(\n              {\n                ...parseSearchParams(searchParams),\n                page: selectAll ? '1' : undefined,\n              },\n              { addQueryPrefix: true },\n            ),\n          )\n\n          clearRouteCache()\n        }}\n        modalPrefix={modalPrefix}\n        search={parseSearchParams(searchParams)?.search as string}\n        selections={{\n          [slug]: {\n            all: selectAll === SelectAllStatus.AllAvailable,\n            ids,\n            totalCount: selectingAll ? count : ids.length,\n          },\n        }}\n        trash={trash}\n        viewType={viewType}\n        where={finalWhere}\n      />\n    </React.Fragment>\n  )\n}\n\ntype AfterDeleteResult = {\n  [relationTo: string]: {\n    deletedCount: number\n    errors: unknown[]\n    ids: (number | string)[]\n    totalCount: number\n  }\n}\ntype DeleteMany_v4Props = {\n  /**\n   * A callback function to be called after the delete request is completed.\n   */\n  afterDelete?: (result: AfterDeleteResult) => void\n  /**\n   * When multiple DeleteMany components are rendered on the page, this will differentiate them.\n   */\n  modalPrefix?: string\n  /**\n   * Optionally pass a search string to filter the documents to be deleted.\n   *\n   * This is intentionally passed as a prop so modals could pass in their own\n   * search string that may not be stored in the URL.\n   */\n  search?: string\n  /**\n   * An object containing the relationTo as the key and an object with the following properties:\n   * - all: boolean\n   * - totalCount: number\n   * - ids: (string | number)[]\n   */\n  selections: {\n    [relationTo: string]: {\n      all?: boolean\n      ids?: (number | string)[]\n      totalCount?: number\n    }\n  }\n  trash?: boolean\n  viewType?: ViewTypes\n  /**\n   * Optionally pass a where clause to filter the documents to be deleted.\n   * This will be ignored if multiple relations are selected.\n   *\n   * This is intentionally passed as a prop so modals could pass in their own\n   * where clause that may not be stored in the URL.\n   */\n  where?: Where\n}\n\n/**\n * Handles polymorphic document delete operations.\n *\n * If you are deleting monomorphic documents, shape your `selections` to match the polymorphic structure.\n */\nexport function DeleteMany_v4({\n  afterDelete,\n  modalPrefix,\n  search,\n  selections,\n  trash,\n  viewType,\n  where,\n}: DeleteMany_v4Props) {\n  const { t } = useTranslation()\n\n  const {\n    config: {\n      collections,\n      routes: { api },\n      serverURL,\n    },\n  } = useConfig()\n\n  const { code: locale } = useLocale()\n  const { i18n } = useTranslation()\n  const { openModal } = useModal()\n\n  const [deletePermanently, setDeletePermanently] = React.useState(false)\n  const confirmManyDeleteDrawerSlug = `${modalPrefix ? `${modalPrefix}-` : ''}confirm-delete-many-docs`\n\n  const handleDelete = React.useCallback(async () => {\n    const deletingOneCollection = Object.keys(selections).length === 1\n    const result: AfterDeleteResult = {}\n\n    for (const [relationTo, { all, ids = [] }] of Object.entries(selections)) {\n      const collectionConfig = collections.find(({ slug }) => slug === relationTo)\n\n      if (collectionConfig) {\n        let whereConstraint: Where\n\n        if (all) {\n          // selecting all documents with optional where filter\n          if (deletingOneCollection && where) {\n            whereConstraint =\n              viewType === 'trash'\n                ? {\n                    and: [\n                      ...(Array.isArray(where.and) ? where.and : [where]),\n                      { deletedAt: { exists: true } },\n                    ],\n                  }\n                : where\n          } else {\n            whereConstraint =\n              viewType === 'trash'\n                ? {\n                    and: [{ id: { not_equals: '' } }, { deletedAt: { exists: true } }],\n                  }\n                : {\n                    id: { not_equals: '' },\n                  }\n          }\n        } else {\n          // selecting specific documents\n          whereConstraint = {\n            and: [\n              { id: { in: ids } },\n              ...(viewType === 'trash' ? [{ deletedAt: { exists: true } }] : []),\n            ],\n          }\n        }\n\n        const url = `${serverURL}${api}/${relationTo}${qs.stringify(\n          {\n            limit: 0,\n            locale,\n            where: mergeListSearchAndWhere({\n              collectionConfig,\n              search,\n              where: whereConstraint,\n            }),\n            ...(viewType === 'trash' ? { trash: true } : {}),\n          },\n          { addQueryPrefix: true },\n        )}`\n\n        const deleteManyResponse =\n          viewType === 'trash' || deletePermanently || !collectionConfig.trash\n            ? await requests.delete(url, {\n                headers: {\n                  'Accept-Language': i18n.language,\n                  'Content-Type': 'application/json',\n                },\n              })\n            : await requests.patch(url, {\n                body: JSON.stringify({\n                  deletedAt: new Date().toISOString(),\n                }),\n                headers: {\n                  'Accept-Language': i18n.language,\n                  'Content-Type': 'application/json',\n                },\n              })\n\n        try {\n          const { plural, singular } = collectionConfig.labels\n          const json = await deleteManyResponse.json()\n\n          const deletedDocs = json?.docs.length || 0\n          const successLabel = deletedDocs > 1 ? plural : singular\n\n          if (deleteManyResponse.status < 400 || deletedDocs > 0) {\n            const wasTrashed = collectionConfig.trash && !deletePermanently && viewType !== 'trash'\n\n            let successKey:\n              | 'general:deletedCountSuccessfully'\n              | 'general:permanentlyDeletedCountSuccessfully'\n              | 'general:trashedCountSuccessfully'\n\n            if (wasTrashed) {\n              successKey = 'general:trashedCountSuccessfully'\n            } else if (viewType === 'trash' || deletePermanently) {\n              successKey = 'general:permanentlyDeletedCountSuccessfully'\n            } else {\n              successKey = 'general:deletedCountSuccessfully'\n            }\n\n            toast.success(\n              t(successKey, {\n                count: deletedDocs,\n                label: getTranslation(successLabel, i18n),\n              }),\n            )\n          }\n\n          if (json?.errors.length > 0) {\n            toast.error(json.message, {\n              description: json.errors.map((error) => error.message).join('\\n'),\n            })\n          }\n\n          result[relationTo] = {\n            deletedCount: deletedDocs,\n            errors: json?.errors || null,\n            ids: json?.docs.map((doc) => doc.id) || [],\n            totalCount: json.totalDocs,\n          }\n\n          if (deleteManyResponse.status > 400 && json?.errors.length === 0) {\n            toast.error(t('error:unknown'))\n            result[relationTo].errors = [t('error:unknown')]\n          }\n\n          continue\n        } catch (_err) {\n          toast.error(t('error:unknown'))\n          result[relationTo] = {\n            deletedCount: 0,\n            errors: [_err],\n            ids: [],\n            totalCount: 0,\n          }\n          continue\n        }\n      }\n    }\n\n    if (typeof afterDelete === 'function') {\n      afterDelete(result)\n    }\n  }, [\n    selections,\n    afterDelete,\n    collections,\n    deletePermanently,\n    locale,\n    search,\n    serverURL,\n    api,\n    i18n,\n    viewType,\n    where,\n    t,\n  ])\n\n  const { label: labelString, labelCount } = Object.entries(selections).reduce(\n    (acc, [key, value], index, array) => {\n      const collectionConfig = collections.find(({ slug }) => slug === key)\n      if (collectionConfig) {\n        const labelCount = acc.labelCount === undefined ? value.totalCount : acc.labelCount\n        const collectionLabel = `${acc.labelCount !== undefined ? `${value.totalCount} ` : ''}${getTranslation(\n          value.totalCount > 1 ? collectionConfig.labels.plural : collectionConfig.labels.singular,\n          i18n,\n        )}`\n\n        let newLabel\n\n        if (index === array.length - 1 && index !== 0) {\n          newLabel = `${acc.label} and ${collectionLabel}`\n        } else if (index > 0) {\n          newLabel = `${acc.label}, ${collectionLabel}`\n        } else {\n          newLabel = collectionLabel\n        }\n\n        return {\n          label: newLabel,\n          labelCount,\n        }\n      }\n      return acc\n    },\n    {\n      label: '',\n      labelCount: undefined,\n    },\n  )\n\n  return (\n    <React.Fragment>\n      <ListSelectionButton\n        aria-label={t('general:delete')}\n        className=\"delete-documents__toggle\"\n        onClick={() => {\n          openModal(confirmManyDeleteDrawerSlug)\n        }}\n      >\n        {t('general:delete')}\n      </ListSelectionButton>\n      <ConfirmationModal\n        body={\n          <React.Fragment>\n            <p>\n              {trash ? (\n                viewType === 'trash' ? (\n                  <Translation\n                    elements={{\n                      '0': ({ children }) => <strong>{children}</strong>,\n                      '1': ({ children }) => <strong>{children}</strong>,\n                    }}\n                    i18nKey=\"general:aboutToPermanentlyDeleteTrash\"\n                    t={t}\n                    variables={{\n                      count: labelCount ?? 0,\n                      label: labelString,\n                    }}\n                  />\n                ) : (\n                  t('general:aboutToTrashCount', { count: labelCount, label: labelString })\n                )\n              ) : (\n                t('general:aboutToDeleteCount', { count: labelCount, label: labelString })\n              )}\n            </p>\n            {trash && viewType !== 'trash' && (\n              <div className=\"delete-documents__checkbox\">\n                <CheckboxInput\n                  checked={deletePermanently}\n                  id=\"delete-forever\"\n                  label={t('general:deletePermanently')}\n                  name=\"delete-forever\"\n                  onToggle={(e) => setDeletePermanently(e.target.checked)}\n                />\n              </div>\n            )}\n          </React.Fragment>\n        }\n        confirmingLabel={t('general:deleting')}\n        heading={t('general:confirmDeletion')}\n        modalSlug={confirmManyDeleteDrawerSlug}\n        onConfirm={handleDelete}\n      />\n    </React.Fragment>\n  )\n}\n"],"mappings":"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","ignoreList":[]}
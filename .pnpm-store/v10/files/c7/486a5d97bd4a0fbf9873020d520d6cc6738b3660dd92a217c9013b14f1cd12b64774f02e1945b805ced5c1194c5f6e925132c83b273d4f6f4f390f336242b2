{"version":3,"file":"index.js","names":["c","_c","Link","useConfig","useTranslation","formatDate","formatAdminURL","React","CreatedAtCell","t0","$","collectionSlug","docID","globalSlug","isTrashed","rowData","t1","t2","undefined","id","updatedAt","config","t3","admin","t4","routes","t5","dateFormat","adminRoute","i18n","trashedDocPrefix","t6","to","_jsx","href","prefetch","children","date","pattern"],"sources":["../../../../../src/views/Versions/cells/CreatedAt/index.tsx"],"sourcesContent":["'use client'\nimport { Link, useConfig, useTranslation } from '@payloadcms/ui'\nimport { formatDate } from '@payloadcms/ui/shared'\nimport { formatAdminURL } from 'payload/shared'\nimport React from 'react'\n\nexport type CreatedAtCellProps = {\n  collectionSlug?: string\n  docID?: number | string\n  globalSlug?: string\n  isTrashed?: boolean\n  rowData?: {\n    id: number | string\n    updatedAt: Date | number | string\n  }\n}\n\nexport const CreatedAtCell: React.FC<CreatedAtCellProps> = ({\n  collectionSlug,\n  docID,\n  globalSlug,\n  isTrashed,\n  rowData: { id, updatedAt } = {},\n}) => {\n  const {\n    config: {\n      admin: { dateFormat },\n      routes: { admin: adminRoute },\n    },\n  } = useConfig()\n\n  const { i18n } = useTranslation()\n\n  const trashedDocPrefix = isTrashed ? 'trash/' : ''\n\n  let to: string\n\n  if (collectionSlug) {\n    to = formatAdminURL({\n      adminRoute,\n      path: `/collections/${collectionSlug}/${trashedDocPrefix}${docID}/versions/${id}`,\n    })\n  }\n\n  if (globalSlug) {\n    to = formatAdminURL({\n      adminRoute,\n      path: `/globals/${globalSlug}/versions/${id}`,\n    })\n  }\n\n  return (\n    <Link href={to} prefetch={false}>\n      {formatDate({ date: updatedAt, i18n, pattern: dateFormat })}\n    </Link>\n  )\n}\n"],"mappings":"AAAA;;AAAA,SAAAA,CAAA,IAAAC,EAAA;;AACA,SAASC,IAAI,EAAEC,SAAS,EAAEC,cAAc,QAAQ;AAChD,SAASC,UAAU,QAAQ;AAC3B,SAASC,cAAc,QAAQ;AAC/B,OAAOC,KAAA,MAAW;AAalB,OAAO,MAAMC,aAAA,GAA8CC,EAAA;EAAA,MAAAC,CAAA,GAAAT,EAAA;EAAC;IAAAU,cAAA;IAAAC,KAAA;IAAAC,UAAA;IAAAC,SAAA;IAAAC,OAAA,EAAAC;EAAA,IAAAP,EAM3D;EAAA,IAAAQ,EAAA;EAAA,IAAAP,CAAA,QAAAM,EAAA;IADUC,EAAA,GAAAD,EAAsB,KAAAE,SAAA,QAAtBF,EAAsB;IAAAN,CAAA,MAAAM,EAAA;IAAAN,CAAA,MAAAO,EAAA;EAAA;IAAAA,EAAA,GAAAP,CAAA;EAAA;EAAtB;IAAAS,EAAA;IAAAC;EAAA,IAAAH,EAAsB;EAE/B;IAAAI,MAAA,EAAAC;EAAA,IAKInB,SAAA;EAJM;IAAAoB,KAAA,EAAAC,EAAA;IAAAC,MAAA,EAAAC;EAAA,IAAAJ,EAGP;EAFQ;IAAAK;EAAA,IAAAH,EAAc;EACb;IAAAD,KAAA,EAAAK;EAAA,IAAAF,EAAqB;EAIjC;IAAAG;EAAA,IAAiBzB,cAAA;EAEjB,MAAA0B,gBAAA,GAAyBhB,SAAA,GAAY,WAAW;EAAA,IAAAiB,EAAA;EAAA,IAAArB,CAAA,QAAAkB,UAAA,IAAAlB,CAAA,QAAAC,cAAA,IAAAD,CAAA,QAAAiB,UAAA,IAAAjB,CAAA,QAAAE,KAAA,IAAAF,CAAA,QAAAG,UAAA,IAAAH,CAAA,QAAAmB,IAAA,IAAAnB,CAAA,QAAAS,EAAA,IAAAT,CAAA,QAAAoB,gBAAA,IAAApB,CAAA,SAAAU,SAAA;IAE5CY,GAAA,CAAAA,EAAA;IAAA,IAEArB,cAAA;MACFqB,EAAA,CAAAA,CAAA,CAAKA;QAAAA;QAAAA,KAAA,CAEGA,gBAAgBrB,cAAA,IAAkBmB,gBAAA,GAAmBlB,KAAA,aAAkBO,EAAA;MAAI,CACnF;IAHA;IAAA,IAMEN,UAAA;MACFmB,EAAA,CAAAA,CAAA,CAAKA;QAAAA;QAAAA,KAAA,CAEGA,YAAYnB,UAAA,aAAuBM,EAAA;MAAI,CAC/C;IAHA;IAOAY,EAAA,GAAAE,IAAA,CAAA/B,IAAA;MAAAgC,IAAA,EAAYF,EAAA;MAAAG,QAAA;MAAAC,QAAA,EACT/B,UAAA;QAAAgC,IAAA,EAAmBjB,SAAA;QAAAS,IAAA;QAAAS,OAAA,EAA0BX;MAAA,CAAW;IAAA,C;;;;;;;;;;;;;;SAD3DI,E;CAIJ","ignoreList":[]}